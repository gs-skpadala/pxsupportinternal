{"ast":null,"code":"// components/LoginForm.js\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./LoginForm.css';// Import the CSS file for the login form styles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginForm=_ref=>{let{setIsLoggedIn}=_ref;const[username,setUsername]=useState('');const[password,setPassword]=useState('');const navigate=useNavigate();const handleLogin=()=>{// Here, you would perform actual authentication logic\n// For simplicity, I'm just checking if both username and password are non-empty\nif(username.trim()!==''&&password.trim()!==''){setIsLoggedIn(true);window.aptrinsic(\"identify\",{\"id\":\"skpadala@gainsight.com\",\"email\":\"skpadala@gainsight.com\",\"firstName\":\"Padala\",\"lastName\":\"Sai\"},{\"id\":\"12345\",\"name\":\"BMW\"});navigate('/');}};// Add animation when the component mounts\nuseEffect(()=>{const formContainer=document.querySelector('.login-form-container');formContainer.classList.add('visible');},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"login-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:\"Login\"})]})]});};export default LoginForm;// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// const LoginForm = ({ setIsLoggedIn }) => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n//   const handleLogin = () => {\n//     // Here, you would perform actual authentication logic\n//     // For simplicity, I'm just checking if both username and password are non-empty\n//     if (username.trim() !== '' && password.trim() !== '') {\n//       setIsLoggedIn(true);\n//       navigate('/');\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Login Page</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         value={username}\n//         onChange={(e) => setUsername(e.target.value)}\n//       />\n//       <input\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n// export default LoginForm;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginForm","_ref","setIsLoggedIn","username","setUsername","password","setPassword","navigate","handleLogin","trim","window","aptrinsic","formContainer","document","querySelector","classList","add","className","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["/Users/skpadala/Desktop/pxsupportinternal/pxsupportinternal/src/components/LoginForm.js"],"sourcesContent":["// components/LoginForm.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css'; // Import the CSS file for the login form styles\n\nconst LoginForm = ({ setIsLoggedIn }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    // Here, you would perform actual authentication logic\n    // For simplicity, I'm just checking if both username and password are non-empty\n    if (username.trim() !== '' && password.trim() !== '') {\n      setIsLoggedIn(true);  \n\n      window.aptrinsic(\"identify\", {\n        \"id\": \"skpadala@gainsight.com\",\n        \"email\": \"skpadala@gainsight.com\",\n        \"firstName\": \"Padala\",\n        \"lastName\": \"Sai\"\n      }, {\n        \"id\": \"12345\",\n        \"name\": \"BMW\"\n      }); \n\n      navigate('/');\n    }\n  };\n\n  \n  // Add animation when the component mounts\n  useEffect(() => {\n    const formContainer = document.querySelector('.login-form-container');\n    formContainer.classList.add('visible');\n  }, []);\n\n  return (\n    <div className=\"login-form-container\">\n      <h2>Login</h2>\n      <form className=\"login-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button onClick={handleLogin}>Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const LoginForm = ({ setIsLoggedIn }) => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = () => {\n//     // Here, you would perform actual authentication logic\n//     // For simplicity, I'm just checking if both username and password are non-empty\n//     if (username.trim() !== '' && password.trim() !== '') {\n//       setIsLoggedIn(true);\n//       navigate('/');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login Page</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         value={username}\n//         onChange={(e) => setUsername(e.target.value)}\n//       />\n//       <input\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\n\n\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,iBAAiB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CAClC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAc,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAa,WAAW,CAAGA,CAAA,GAAM,CACxB;AACA;AACA,GAAIL,QAAQ,CAACM,IAAI,CAAC,CAAC,GAAK,EAAE,EAAIJ,QAAQ,CAACI,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACpDP,aAAa,CAAC,IAAI,CAAC,CAEnBQ,MAAM,CAACC,SAAS,CAAC,UAAU,CAAE,CAC3B,IAAI,CAAE,wBAAwB,CAC9B,OAAO,CAAE,wBAAwB,CACjC,WAAW,CAAE,QAAQ,CACrB,UAAU,CAAE,KACd,CAAC,CAAE,CACD,IAAI,CAAE,OAAO,CACb,MAAM,CAAE,KACV,CAAC,CAAC,CAEFJ,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAGD;AACAb,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,aAAa,CAAGC,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC,CACrEF,aAAa,CAACG,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC,CACxC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEjB,KAAA,QAAKkB,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCrB,IAAA,OAAAqB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdnB,KAAA,SAAMkB,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC1BrB,IAAA,UACEsB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAElB,QAAS,CAChBmB,QAAQ,CAAGC,CAAC,EAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9C,CAAC,cACFxB,IAAA,UACEsB,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEhB,QAAS,CAChBiB,QAAQ,CAAGC,CAAC,EAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9C,CAAC,cACFxB,IAAA,WAAQ4B,OAAO,CAAEjB,WAAY,CAAAU,QAAA,CAAC,OAAK,CAAQ,CAAC,EACxC,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,SAAS,CAGxB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}